&НаСервере
Процедура SubjectaTipsПриИзмененииНаСервере()

	Если Объект.SubjectaTips = Перечисления.SubjektaTipi.Darbinieks Тогда
	
		Элементы.Darbinieks.Видимость = Истина;		
	
	ИначеЕсли Объект.SubjectaTips = Перечисления.SubjektaTipi.Skolotajs Тогда 
	
		Элементы.Skolotajs.Видимость = Истина;
		
	ИначеЕсли Объект.SubjectaTips = Перечисления.SubjektaTipi.Students Тогда
		
		Элементы.Students.Видимость = Истина;	
	
	КонецЕсли;	

КонецПроцедуры
 


&НаКлиенте
Процедура SubjectaTipsПриИзменении(Элемент)
	
	Элементы.Skolotajs.Видимость = Ложь;
	Элементы.Students.Видимость = Ложь;
	Элементы.Darbinieks.Видимость = Ложь;
	
	Объект.Darbinieks = Объект.Darbinieks.Пустая();
	Объект.Skolotajs = Объект.Skolotajs.Пустая();
	Объект.Students = Объект.Students.Пустая();
	
	SubjectaTipsПриИзмененииНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.SubjectaTips = Перечисления.SubjektaTipi.Darbinieks Тогда
	
		Если Объект.Darbinieks = Справочники.DarbaPersonals.ПустаяСсылка() Тогда
		
			Сообщить("Izvēlaties darbinieku!");
			Отказ = Истина;
		
		КонецЕсли; 	
	
	ИначеЕсли Объект.SubjectaTips = Перечисления.SubjektaTipi.Students Тогда
	
		Если Объект.Students = Справочники.Studenti.ПустаяСсылка() Тогда
		
			Сообщить("Izvēlaties studentu!");
			Отказ = Истина;
		
		КонецЕсли;
	
	ИначеЕсли Объект.SubjectaTips = Перечисления.SubjektaTipi.Skolotajs Тогда
		
		Check = Истина;
		
		Если Объект.Skolotajs = Справочники.Skolotaji.ПустаяСсылка() Тогда
		
			Сообщить("Izvēlaties skolotaju!");
			Отказ = Истина;
		
		КонецЕсли;
		
		Если Элементы.AizstāšanaGrupVad.Видимость = Ложь Тогда
			
			Если Справочники.Grupas.НайтиПоРеквизиту("GrupasVadītājs", Объект.Skolotajs) <> Справочники.Grupas.ПустаяСсылка() Тогда
				
				Элементы.AizstāšanaGrupVad.Видимость = Истина;
				Check = Ложь;
				
			КонецЕсли; 	
		
		КонецЕсли;

		
		Если Элементы.AizstāšanaNodVad.Видимость = Ложь Тогда
			
			Если Справочники.Nodalas.НайтиПоРеквизиту("NodalasVaditajs", Объект.Skolotajs) <> Справочники.Nodalas.ПустаяСсылка() Тогда
				
				Элементы.AizstāšanaNodVad.Видимость = Истина;	
				Check = Ложь;
				
			КонецЕсли; 	
		
		КонецЕсли;
				
		Если НЕ Check Тогда
			
				Отказ = Истина;	
			
			КонецЕсли;
		
		Если Элементы.AizstāšanaNodVad.Видимость = Истина ИЛИ Элементы.AizstāšanaGrupVad.Видимость = Истина Тогда
			
			Check = Истина;
			
			Если Элементы.AizstāšanaGrupVad.Видимость = Истина Тогда
				
				Если Объект.AizstāšanaGrupVad = Справочники.Skolotaji.ПустаяСсылка() Тогда
					
					Сообщить("Izvēlaties jaunu skolotāju kā grupas vaditaju!");
					Check = Ложь;
					
				ИначеЕсли Объект.AizstāšanaGrupVad = Объект.Skolotajs Тогда
					
					Сообщить("Izvēlaties citu skolotāju kā grupas vaditaju!");
					Check = Ложь;	
					
				КонецЕсли; 	
				
			КонецЕсли;
			
			Если Элементы.AizstāšanaNodVad.Видимость = Истина Тогда
				
				Если Объект.AizstāšanaNodVad = Справочники.Skolotaji.ПустаяСсылка() Тогда
					
					Сообщить("Izvēlaties jaunu skolotāju kā nodalas vaditaju!");
					Check = Ложь;
					
				ИначеЕсли Объект.AizstāšanaNodVad = Объект.Skolotajs Тогда
					
					Сообщить("Izvēlaties citu skolotāju kā nodalas vaditaju!");
					Check = Ложь;	
					
				КонецЕсли; 	
				
			КонецЕсли;
			
			Если НЕ Check Тогда
			
				Отказ = Истина;	
			
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура StundasCheck()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	StunduSaraksts.NedēļasDiena КАК NedēļasDiena,
	|	StunduSaraksts.StundasNumurs КАК StundasNumurs,
	|	StunduSaraksts.Grupa КАК Grupa
	|ИЗ
	|	РегистрСведений.StunduSaraksts КАК StunduSaraksts
	|ГДЕ
	|	StunduSaraksts.Skolotajs = &Skolotajs";
	
	Запрос.УстановитьПараметр("Skolotajs", Объект.Skolotajs);
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.StunduSaraksts.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.NedēļasDiena.Установить(Выборка.NedēļasDiena);
			НаборЗаписей.Отбор.StundasNumurs.Установить(Выборка.StundasNumurs);
			НаборЗаписей.Отбор.Grupa.Установить(Выборка.Grupa);
			НаборЗаписей.Записать(Истина);
			
		КонецЦикла;
		Сообщить("Visas mācības ar šo skolotāju tika attālinātas no saraksta.");
		
	Иначе 
		
	КонецЕсли;

КонецПроцедуры // StundasCheck()
 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.VardsUzvards.Видимость = Истина;
	Элементы.VardsUzvards.Доступность = Ложь;
	Элементы.SubjectaTips.Доступность = Ложь;
	Элементы.Дата.Доступность = Ложь;
	Элементы.ФормаRenovēt.Видимость = Истина;
	Элементы.Skolotajs.Видимость = Ложь;
	Элементы.Students.Видимость = Ложь;
	Элементы.Darbinieks.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура SkolotajsПриИзмененииНаСервере()
	
	Объект.VardsUzvards = Объект.Skolotajs.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура SkolotajsПриИзменении(Элемент)
	SkolotajsПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура StudentsПриИзмененииНаСервере()
	
	Объект.VardsUzvards = Объект.Students.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура StudentsПриИзменении(Элемент)
	StudentsПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура DarbinieksПриИзмененииНаСервере()
	
	Объект.VardsUzvards = Объект.Darbinieks.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура DarbinieksПриИзменении(Элемент)
	DarbinieksПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура AizstāšanaGrupVadНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
    
    Ф = ПолучитьФорму("Справочник.Skolotaji.ФормаВыбора");
    Список = Ф.Список;
    Список.Отбор.Элементы.Очистить();    
    
    СписокОтбора = Новый СписокЗначений;
    СписокОтбора.Добавить(ПолучитьПустуюГруппу());
    
    Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
    Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("GrupaKasVed"); 
    Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке; 
    Отбор.Использование = Истина; 
    Отбор.ПравоеЗначение = СписокОтбора;
    
    Объект.AizstāšanaGrupVad = Ф.ОткрытьМодально();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПустуюГруппу()

	Возврат Справочники.Grupas.ПустаяСсылка();	

КонецФункции // ()

&НаКлиенте
Процедура AizstāšanaNodVadНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
    
    Ф = ПолучитьФорму("Справочник.Skolotaji.ФормаВыбора");
    Список = Ф.Список;
    Список.Отбор.Элементы.Очистить();    
    
    СписокОтбора = Новый СписокЗначений;
    СписокОтбора.Добавить(ПолучитьПустуюНодалю());
    
    Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
    Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("NodalaKasVed"); 
    Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке; 
    Отбор.Использование = Истина; 
    Отбор.ПравоеЗначение = СписокОтбора;
    
    Объект.AizstāšanaNodVad = Ф.ОткрытьМодально();
	
КонецПроцедуры

Функция ПолучитьПустуюНодалю()

	Возврат Справочники.Nodalas.ПустаяСсылка();	

КонецФункции // ()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	StundasCheck();
		
КонецПроцедуры
 

Если Объект.Проведен = Истина Тогда

	Элементы.VardsUzvards.Видимость = Истина;
	Элементы.VardsUzvards.Доступность = Ложь;
	Элементы.SubjectaTips.Доступность = Ложь;
	Элементы.Дата.Доступность = Ложь;
	Элементы.ФормаRenovēt.Видимость = Истина;

КонецЕсли; 
