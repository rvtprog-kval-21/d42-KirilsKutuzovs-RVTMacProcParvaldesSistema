&НаСервере
Процедура  SaliktSarakstuНаСервере(ДанныеФормы)
	
	Док = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.StunduSarakstaVeidosana")); // Получаем объект из данных формы ИЛИ
	
	Док = Документы.StunduSarakstaVeidosana.СоздатьДокумент();
	
	Док.Grupa = Справочники.Grupas.НайтиПоКоду(Объект.Код);
	Док.Дата = ТекущаяДата();
	
	ЗначениеВДанныеФормы(Док,ДанныеФормы); // Кладем обратно в объект формы уже созданный документ 
	
КонецПроцедуры

&НаКлиенте
Процедура SaliktSarakstu(Команда)
	
	Если Проверка() Тогда
	
		Форма = ПолучитьФорму("Документ.StunduSarakstaVeidosana.Форма.ФормаДокумента");
		ДанныеФормы = Форма.Объект; // Получаем объект формы в переменную
		SaliktSarakstuНаСервере(ДанныеФормы); // Заполняем документ на сервере
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект); // копируем наш объект в объект формы и далее открываем ее
		Форма.Открыть();	
	
	КонецЕсли; 
			
КонецПроцедуры

&НаСервере
Функция Проверка()

	Если Справочники.Grupas.НайтиПоКоду(Объект.Код) <> Справочники.Grupas.ПустаяСсылка() Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;

КонецФункции // Проверка()




&НаСервере
Функция SkatitSarakstuНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	StunduSaraksts.MacibuPrieksmets КАК MacibuPrieksmets,
		|	StunduSaraksts.Skolotajs КАК Skolotajs,
		|	StunduSaraksts.KabinetaNumurs КАК KabinetaNumurs,
		|	StunduSaraksts.StundasNumurs КАК StundasNumurs,
		|	StunduSaraksts.NedēļasDiena КАК NedēļasDiena
		|ИЗ
		|	РегистрСведений.StunduSaraksts КАК StunduSaraksts
		|ГДЕ
		|	StunduSaraksts.Grupa = &Grupa
		|
		|УПОРЯДОЧИТЬ ПО
		|	StundasNumurs,
		|	NedēļasDiena";
	
	Запрос.УстановитьПараметр("Grupa", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Таб = Новый ТабличныйДокумент;
	Таб.ПолеСверху = 3;
	Таб.ИмяПараметровПечати = "DRUKAS_PARAMETRI_stundu_grafiks_drukasana";
	Таб.АвтоМасштаб = Истина;
	Макет = ПолучитьОбщийМакет("StunduGrafiks");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьУрок = Макет.ПолучитьОбласть("Stunda");
	
	ОбластьШапка.Параметры.subjekts = Объект.Наименование;
	Таб.Вывести(ОбластьШапка);
		
	ОбластьУрок.Параметры.StNr = 0;
	ОбластьУрок.Параметры.time = "7:45 - 8:25";
	ТекущийУрок = 0;
	
	Очистка = Новый Структура;
	Очистка.Вставить("Prieksmets1");
	Очистка.Вставить("Prieksmets2");
	Очистка.Вставить("Prieksmets3");
	Очистка.Вставить("Prieksmets4");
	Очистка.Вставить("Prieksmets5");
	
	Очистка.Вставить("Skolotajs1");
	Очистка.Вставить("Skolotajs2");
	Очистка.Вставить("Skolotajs3");
	Очистка.Вставить("Skolotajs4");
	Очистка.Вставить("Skolotajs5");
	
	Очистка.Вставить("KabNr1");
	Очистка.Вставить("KabNr2");
	Очистка.Вставить("KabNr3");
	Очистка.Вставить("KabNr4");
	Очистка.Вставить("KabNr5");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Пока ТекущийУрок < ВыборкаДетальныеЗаписи.StundasNumurs Цикл
			
			ТекущийУрок = ТекущийУрок + 1;
			Таб.Вывести(ОбластьУрок);
			ОбластьУрок.Параметры.Заполнить(Очистка);
			ОбластьУрок.Параметры.StNr = ТекущийУрок;
			
			Если ТекущийУрок = 1 Тогда
				
				ОбластьУрок.Параметры.time = "8:30 - 9:10";		
				
			ИначеЕсли ТекущийУрок = 2 Тогда 
				
				ОбластьУрок.Параметры.time = "9:15 - 9:55";
				
			ИначеЕсли ТекущийУрок = 3 Тогда 
				
				ОбластьУрок.Параметры.time = "10:10 - 10:50";
				
			ИначеЕсли ТекущийУрок = 4 Тогда 
				
				ОбластьУрок.Параметры.time = "10:55 - 11:35";
				
			ИначеЕсли ТекущийУрок = 5 Тогда 
				
				ОбластьУрок.Параметры.time = "11:45 - 12:25";
				
			ИначеЕсли ТекущийУрок = 6 Тогда 
				
				ОбластьУрок.Параметры.time = "12:30 - 13:10";
				
			ИначеЕсли ТекущийУрок = 7 Тогда 
				
				ОбластьУрок.Параметры.time = "13:20 - 14:00";
				
			ИначеЕсли ТекущийУрок = 8 Тогда 
				
				ОбластьУрок.Параметры.time = "14:05 - 14:45";
				
			ИначеЕсли ТекущийУрок = 9 Тогда 
				
				ОбластьУрок.Параметры.time = "14:50 - 15:30";
				
			ИначеЕсли ТекущийУрок = 10 Тогда 
				
				ОбластьУрок.Параметры.time = "15:35 - 16:15";
				
			ИначеЕсли ТекущийУрок = 11 Тогда 
				
				ОбластьУрок.Параметры.time = "16:20 - 17:00";
				
			ИначеЕсли ТекущийУрок = 12 Тогда 
				
				ОбластьУрок.Параметры.time = "17:05 - 17:45";
				
			КонецЕсли;	
			
		КонецЦикла;  
		
		
		Если ВыборкаДетальныеЗаписи.NedēļasDiena = Перечисления.NedēļasDienas.Pirmdiena Тогда
			
			ОбластьУрок.Параметры.Prieksmets1 = ВыборкаДетальныеЗаписи.MacibuPrieksmets;	
			ОбластьУрок.Параметры.Skolotajs1 = ВыборкаДетальныеЗаписи.Skolotajs;
			ОбластьУрок.Параметры.KabNr1 = "" + ВыборкаДетальныеЗаписи.KabinetaNumurs + ". kab.";
			
		ИначеЕсли ВыборкаДетальныеЗаписи.NedēļasDiena = Перечисления.NedēļasDienas.Otrdiena Тогда
		
			ОбластьУрок.Параметры.Prieksmets2 = ВыборкаДетальныеЗаписи.MacibuPrieksmets;	
			ОбластьУрок.Параметры.Skolotajs2 = ВыборкаДетальныеЗаписи.Skolotajs;
			ОбластьУрок.Параметры.KabNr2 = "" + ВыборкаДетальныеЗаписи.KabinetaNumurs + ". kab.";
			
		ИначеЕсли ВыборкаДетальныеЗаписи.NedēļasDiena = Перечисления.NedēļasDienas.Tresdiena Тогда
		
			ОбластьУрок.Параметры.Prieksmets3 = ВыборкаДетальныеЗаписи.MacibuPrieksmets;	
			ОбластьУрок.Параметры.Skolotajs3 = ВыборкаДетальныеЗаписи.Skolotajs;
			ОбластьУрок.Параметры.KabNr3 = "" + ВыборкаДетальныеЗаписи.KabinetaNumurs + ". kab.";
			
		ИначеЕсли ВыборкаДетальныеЗаписи.NedēļasDiena = Перечисления.NedēļasDienas.Ceturdiena Тогда
		
			ОбластьУрок.Параметры.Prieksmets4 = ВыборкаДетальныеЗаписи.MacibuPrieksmets;	
			ОбластьУрок.Параметры.Skolotajs4 = ВыборкаДетальныеЗаписи.Skolotajs;
			ОбластьУрок.Параметры.KabNr4 = "" + ВыборкаДетальныеЗаписи.KabinetaNumurs + ". kab.";
			
		ИначеЕсли ВыборкаДетальныеЗаписи.NedēļasDiena = Перечисления.NedēļasDienas.Piektdiena Тогда
		
			ОбластьУрок.Параметры.Prieksmets5 = ВыборкаДетальныеЗаписи.MacibuPrieksmets;	
			ОбластьУрок.Параметры.Skolotajs5 = ВыборкаДетальныеЗаписи.Skolotajs;
			ОбластьУрок.Параметры.KabNr5 = "" + ВыборкаДетальныеЗаписи.KabinetaNumurs + ". kab.";		
		
		КонецЕсли; 
		
	КонецЦикла;
	
	Таб.Вывести(ОбластьУрок);
	
	Возврат Таб;
	
КонецФункции

&НаКлиенте
Процедура SkatitSarakstu(Команда)
	SkatitSarakstuНаСервере().Показать();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.ФормаSaliktSarakstu.Видимость = Истина;
	Элементы.ФормаSkatitSarakstu.Видимость = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура KlasesVadītājsНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
    
    Ф = ПолучитьФорму("Справочник.Skolotaji.ФормаВыбора");
    Список = Ф.Список;
    Список.Отбор.Элементы.Очистить();    
    
    СписокОтбора = Новый СписокЗначений;
    СписокОтбора.Добавить(Объект.Ссылка.Пустая());
    
    Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
    Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("GrupaKasVed"); 
    Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке; 
    Отбор.Использование = Истина; 
    Отбор.ПравоеЗначение = СписокОтбора;
    
    Объект.GrupasVadītājs = Ф.ОткрытьМодально();	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
КонецПроцедуры

Если Объект.Ссылка <> Объект.Ссылка.Пустая() Тогда
	
		Элементы.ФормаSaliktSarakstu.Видимость = Истина;
		Элементы.ФормаSkatitSarakstu.Видимость = Истина;		
	
КонецЕсли;
